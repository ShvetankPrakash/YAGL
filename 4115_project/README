The YAGL compiler (forked from MicroC compiler)

Coded in OCaml, this language is built around c-like syntax (ints,
bools, and void types, arithmetic, if-else, for, and while statements,
and user-defined functions) and compiles it into LLVM IR.

It needs the OCaml llvm library, which is most easily installed through opam.

Install LLVM and its development libraries, the m4 macro preprocessor,
and opam, then use opam to install llvm.

The version of the OCaml llvm library must match the version of the LLVM
system installed on your system.

YAGL currently supports printString and printInt, which call 
the C library function printf().

The stock C compiler compiles printbig.o.  testall.sh runs the yagl 
executable on each testcase (.ygl file) to produce a .ll file, invokes
"llc" (the LLVM compiler) to produce a .s (assembly) file, then
invokes "cc" (the stock C compiler) to assemble the .s file, link in
printbig.o, and generate an executable.  See testall.sh for details.

---- HELLO WORLD MILESTONE ----
To test our hello world milestone for YAGL:

1) Invoke the docker image that Prof. Edwards provided
   (run docker run --rm -it -v `pwd`:/home/microc -w=/home/microc columbiasedwards/plt)

2) cd into YAGL 

3) Run 'make helloworld'

4) This will run a script that outputs the source helloworld.ygl program, 
   followed by the AST, SAST, LLVM IR, assembly, and finally the output
   of the helloworld executable.

5) To run the regression test suite run 'make test'

6) Alternatively if you would like to simply make the compiler and run the entire test suite simply run 'make'
-------------------------------

